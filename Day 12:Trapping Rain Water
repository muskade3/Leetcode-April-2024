class Solution {
    public int trap(int[] height) {
        int ans=0;
        int n=height.length;
        int[]left_max= new int[n];
        int[]right_max=new int[n];
        left_max[0]=height[0];
        right_max[n-1]=height[n-1];
        for(int i=1;i<left_max.length;i++)
        {
            if(left_max[i-1]>=height[i])
            {
                left_max[i]=left_max[i-1];
            }else
            {
                 left_max[i]=height[i];
            }
        }
        for(int i=n-2;i>=0;i--)
        {
            if(right_max[i+1]>=height[i])
            {
                right_max[i]=right_max[i+1];
            }else
            {
                 right_max[i]=height[i];
            }
        }

        for(int i=0;i<n;i++)
        {
            int x=height[i];
            int min=Math.min(left_max[i],right_max[i]);
            ans=ans+(min-x);
        }
        return ans;
        
    }
}
