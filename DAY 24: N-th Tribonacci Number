class Solution {
    public static int helper(int n,int[]dp)
    {
        if(n<=0)
        {
            return 0;
        }
        if(n==1||n==2)
        {
            return 1;
        }
        if(dp[n]!=-1)
        {
            return dp[n];
        }

        int x=helper(n-3,dp);
       int y= helper(n-1,dp);
       int z=helper(n-2,dp);
       return dp[n]=x+y+z;
    }
    public int tribonacci(int n) {
        int dp[]=new int[n+1];
        Arrays.fill(dp,-1);
        return helper(n,dp);
    }
}
